<?php
/**
 * Created by PhpStorm.
 * User: maesierra
 * Date: 01/12/2020
 * Time: 20:43
 */

namespace maesierra\AdventOfCode2021;


use maesierra\AdventOfCode2021\Day10\State;
use PHPUnit\Framework\TestCase;

class Day11Test extends TestCase {

    public function testApplyRules() {
        $day11 = new Day11();
        $flashes = 0;
        $s = $day11->applyRules([
            [5,4,8,3,1,4,3,2,2,3],
            [2,7,4,5,8,5,4,7,1,1],
            [5,2,6,4,5,5,6,1,7,3],
            [6,1,4,1,3,3,6,1,4,6],
            [6,3,5,7,3,8,5,4,7,8],
            [4,1,6,7,5,2,4,6,4,5],
            [2,1,7,6,8,4,1,7,2,1],
            [6,8,8,2,8,8,1,1,3,4],
            [4,8,4,6,8,4,8,5,5,4],
            [5,2,8,3,7,5,1,5,2,6],
        ], $flashes);
        $this->assertEquals([
            [6,5,9,4,2,5,4,3,3,4],
            [3,8,5,6,9,6,5,8,2,2],
            [6,3,7,5,6,6,7,2,8,4],
            [7,2,5,2,4,4,7,2,5,7],
            [7,4,6,8,4,9,6,5,8,9],
            [5,2,7,8,6,3,5,7,5,6],
            [3,2,8,7,9,5,2,8,3,2],
            [7,9,9,3,9,9,2,2,4,5],
            [5,9,5,7,9,5,9,6,6,5],
            [6,3,9,4,8,6,2,6,3,7],
        ], $s);
        $s = $day11->applyRules($s, $flashes);
        $this->assertEquals([
            [8,8,0,7,4,7,6,5,5,5],
            [5,0,8,9,0,8,7,0,5,4],
            [8,5,9,7,8,8,9,6,0,8],
            [8,4,8,5,7,6,9,6,0,0],
            [8,7,0,0,9,0,8,8,0,0],
            [6,6,0,0,0,8,8,9,8,9],
            [6,8,0,0,0,0,5,9,4,3],
            [0,0,0,0,0,0,7,4,5,6],
            [9,0,0,0,0,0,0,8,7,6],
            [8,7,0,0,0,0,6,8,4,8],

        ], $s);
        $s = $day11->applyRules($s, $flashes);
        $this->assertEquals([
            [0,0,5,0,9,0,0,8,6,6],
            [8,5,0,0,8,0,0,5,7,5],
            [9,9,0,0,0,0,0,0,3,9],
            [9,7,0,0,0,0,0,0,4,1],
            [9,9,3,5,0,8,0,0,6,3],
            [7,7,1,2,3,0,0,0,0,0],
            [7,9,1,1,2,5,0,0,0,9],
            [2,2,1,1,1,3,0,0,0,0],
            [0,4,2,1,1,2,5,0,0,0],
            [0,0,2,1,1,1,9,0,0,0],
        ], $s);
        $s = $day11->applyRules($s, $flashes);
        $this->assertEquals([
            [2,2,6,3,0,3,1,9,7,7],
            [0,9,2,3,0,3,1,6,9,7],
            [0,0,3,2,2,2,1,1,5,0],
            [0,0,4,1,1,1,1,1,6,3],
            [0,0,7,6,1,9,1,1,7,4],
            [0,0,5,3,4,1,1,1,2,2],
            [0,0,4,2,3,6,1,1,2,0],
            [5,5,3,2,2,4,1,1,2,2],
            [1,5,3,2,2,4,7,2,1,1],
            [1,1,3,2,2,3,0,2,1,1],
        ], $s);
        //5
        $s = $day11->applyRules($s, $flashes);
        $this->assertEquals([
            [4,4,8,4,1,4,4,0,0,0],
            [2,0,4,4,1,4,4,0,0,0],
            [2,2,5,3,3,3,3,4,9,3],
            [1,1,5,2,3,3,3,2,7,4],
            [1,1,8,7,3,0,3,2,8,5],
            [1,1,6,4,6,3,3,2,3,3],
            [1,1,5,3,4,7,2,2,3,1],
            [6,6,4,3,3,5,2,2,3,3],
            [2,6,4,3,3,5,8,3,2,2],
            [2,2,4,3,3,4,1,3,2,2],
        ], $s);
        $s = $day11->applyRules($s, $flashes);
        $this->assertEquals([
            [5,5,9,5,2,5,5,1,1,1],
            [3,1,5,5,2,5,5,2,2,2],
            [3,3,6,4,4,4,4,6,0,5],
            [2,2,6,3,4,4,4,4,9,6],
            [2,2,9,8,4,1,4,3,9,6],
            [2,2,7,5,7,4,4,3,4,4],
            [2,2,6,4,5,8,3,3,4,2],
            [7,7,5,4,4,6,3,3,4,4],
            [3,7,5,4,4,6,9,4,3,3],
            [3,3,5,4,4,5,2,4,3,3],
        ], $s);
        $s = $day11->applyRules($s, $flashes); //7
        $s = $day11->applyRules($s, $flashes); //8
        $s = $day11->applyRules($s, $flashes); //9
        $s = $day11->applyRules($s, $flashes); //10
        $this->assertEquals([
            [0,4,8,1,1,1,2,9,7,6],
            [0,0,3,1,1,1,2,0,0,9],
            [0,0,4,1,1,1,2,5,0,4],
            [0,0,8,1,1,1,1,4,0,6],
            [0,0,9,9,1,1,1,3,0,6],
            [0,0,9,3,5,1,1,2,3,3],
            [0,4,4,2,3,6,1,1,3,0],
            [5,5,3,2,2,5,2,3,5,0],
            [0,5,3,2,2,5,0,6,0,0],
            [0,0,3,2,2,4,0,0,0,0],
        ], $s);
        $this->assertEquals(204, $flashes);

    }


    public function testQuestion1() {
        $this->assertEquals(1656, (new Day11())->question1(__DIR__ . DIRECTORY_SEPARATOR . "Day11.txt"));
    }

    public function testQuestion2() {
        $this->assertEquals(195, (new Day11())->question2(__DIR__ . DIRECTORY_SEPARATOR . "Day11.txt"));
    }
}